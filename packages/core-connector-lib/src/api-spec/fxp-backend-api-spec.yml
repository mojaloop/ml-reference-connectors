openapi: 3.0.1
info:
  title: FXP Backend API
  description: >
    API For FXP Backend API to support quoting, and fxConversion confirmation
  version: 1.0.0
  license:
    name: Apache License Version 2.0, January 2004
    url: https://github.com/mojaloop/documentation/blob/main/LICENSE.md

paths:
  /health:
    get:
      summary: Health Check
      tags: [Health]
      description: Check if the service is operational.
      responses:
        "200":
          description: Service is running.
  
  /fxQuotesP2p:
    post:
      description: The HTTP request `POST /fxQuotes` is used to ask an FXP backend to provide a quotation for a currency conversion.
      summary: Calculate FX quote for SEND
      tags:
        - Fx
      operationId: FxQuotesPost
      requestBody:
        description: Details of the FX quote request.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FxQuotesPostBackendRequest'
      responses:
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FxQuotesPostBackendResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    
  /fxQuotesP2b:
    post:
      description: The HTTP request `POST /fxQuotes` is used to ask an FXP backend to provide a quotation for a currency conversion.
      summary: Calculate FX quote for RECEIVE
      tags:
        - Fx
      operationId: FxQuotesPost
      requestBody:
        description: Details of the FX quote request.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FxQuotesPostBackendRequest'
      responses:
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FxQuotesPostBackendResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  /fxTransfers:
    post:
      description: The HTTP request `POST /fxTransfers` is used to ask an FXP backend to confirm the execution of an agreed currency conversion.
      summary: Perform FX transfer
      tags:
        - Fx
      operationId: FxTransfersPost
      requestBody:
        description: Details of the FX transfer request.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FxTransfersPostBackendRequest'
      responses:
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FxTransfersPostBackendResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /fxTransfers/{commitRequestId}:
    put:
      description: The HTTP request `PUT /fxTransfers/{commitRequestId}` is used to notify an FXP backend about the status of currency conversion.
      summary: FX Commit Notification
      tags:
        - Fx
      operationId: FxTransfersById
      requestBody:
        description: Status of the FX transfer.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FxTransfersPutBackendRequest'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
components:
  responses:
    '200':
      description: OK
    '400':
      description: Malformed or missing required headers or parameters.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
    '500':
      description: An error occurred processing the request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
  schemas:
    TransferState:
      title: TransferState
      type: string
      enum:
        - RECEIVED
        - RESERVED
        - COMMITTED
        - ABORTED
      description: |-
        Below are the allowed values for the enumeration.
        - RECEIVED - Next ledger has received the transfer.
        - RESERVED - Next ledger has reserved the transfer.
        - COMMITTED - Next ledger has successfully performed the transfer.
        - ABORTED - Next ledger has aborted the transfer due to a rejection or failure to perform the transfer.
      example: RESERVED
    conversionState:
      allOf:
        - $ref: '#/components/schemas/TransferState'
        - description: The current status of the conversion request.
    FxTransfersPutBackendRequest:
      title: FxTransfersPutBackendRequest
      type: object
      description: PUT /fxTransfers/{commitRequestId} object
      properties:
        homeTransactionId:
          description: Transaction ID for the FXP backend, used to reconcile transactions between the Switch and FXP backend systems.
          type: string
        fulfilment:
          $ref: '#/components/schemas/fulfilment'
        completedTimestamp:
          $ref: '#/components/schemas/completedTimestamp'
        conversionState:
          $ref: '#/components/schemas/conversionState'
        extensionList:
          $ref: '#/components/schemas/ExtensionList_v2_1_0'
      required:
        - conversionState
    IlpCondition:
      title: IlpCondition
      type: string
      pattern: ^[A-Za-z0-9-_]{43}$
      maxLength: 48
      description: Condition that must be attached to the transfer by the Payer.
    commitRequestId:
      allOf:
        - $ref: '#/components/schemas/CorrelationId'
        - description: An end-to-end identifier for the confirmation request.
    determiningTransferId:
      allOf:
        - $ref: '#/components/schemas/CorrelationId'
        - description: The transaction ID of the transfer to which this currency conversion relates, if the conversion is part of a transfer. If the conversion is a bulk currency purchase, this field should be omitted.
    initiatingFsp:
      allOf:
        - $ref: '#/components/schemas/FspId'
        - description: Identifier for the FSP who is requesting a currency conversion.
    counterPartyFsp:
      allOf:
        - $ref: '#/components/schemas/FspId'
        - description: Identifier for the FXP who is performing the currency conversion.
    sourceAmount:
      allOf:
        - $ref: '#/components/schemas/Money'
        - description: The amount being offered for conversion by the requesting FSP.
    targetAmount:
      allOf:
        - $ref: '#/components/schemas/Money'
        - description: The amount which the FXP is to credit to the requesting FSP in the target currency.
    condition:
      allOf:
        - $ref: '#/components/schemas/IlpCondition'
        - description: ILP condition received by the requesting FSP when the quote was approved.
    TransferStateFromBackend:
      title: TransferStateFromBackend
      type: string
      enum:
        - RESERVED
        - COMMITTED
      description: |-
        Below are the allowed values for the enumeration.
        - RESERVED - Next ledger has reserved the transfer.
        - COMMITTED - Next ledger has successfully performed the transfer.
        Note: There is no ABORTED state, http error response with proper mojaloop error code should be used to abort / reject a transfer.
      example: COMMITTED
    IlpFulfilment:
      title: IlpFulfilment
      type: string
      pattern: ^[A-Za-z0-9-_]{43}$
      maxLength: 48
      description: Fulfilment that must be attached to the transfer by the Payee.
      example: WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8
    fulfilment:
      allOf:
        - $ref: '#/components/schemas/IlpFulfilment'
        - description: The fulfilment of the condition specified for the currency conversion. Mandatory if the conversion has been executed successfully.
    completedTimestamp:
      allOf:
        - $ref: '#/components/schemas/DateTime'
        - description: Time and date when the conversion was executed.
    FxTransfersPostBackendResponse:
      title: FxTransfersPostBackendResponse
      type: object
      description: The object sent as a response for the POST /fxTransfers request.
      properties:
        homeTransactionId:
          description: Transaction ID for the FXP backend, used to reconcile transactions between the Switch and FXP backend systems.
          type: string
        fulfilment:
          $ref: '#/components/schemas/fulfilment'
        completedTimestamp:
          $ref: '#/components/schemas/completedTimestamp'
        conversionState:
          $ref: '#/components/schemas/TransferStateFromBackend'
        extensionList:
          $ref: '#/components/schemas/ExtensionList_v2_1_0'
      required:
        - conversionState
    FxTransfersPostBackendRequest:
      title: FxTransfersPostBackendRequest
      type: object
      description: The object sent in the POST /fxTransfers request.
      properties:
        homeTransactionId:
          description: Transaction ID for the FXP backend, used to reconcile transactions between the Switch and FXP backend systems.
          type: string
        commitRequestId:
          $ref: '#/components/schemas/commitRequestId'
        determiningTransferId:
          $ref: '#/components/schemas/determiningTransferId'
        initiatingFsp:
          $ref: '#/components/schemas/initiatingFsp'
        counterPartyFsp:
          $ref: '#/components/schemas/counterPartyFsp'
        sourceAmount:
          $ref: '#/components/schemas/sourceAmount'
        targetAmount:
          $ref: '#/components/schemas/targetAmount'
        condition:
          $ref: '#/components/schemas/condition'
      required:
        - commitRequestId
        - initiatingFsp
        - counterPartyFsp
        - sourceAmount
        - targetAmount
    ExtensionKey_v2_1_0:
      title: ExtensionKey_v2_1_0
      type: string
      minLength: 1
      description: Extension key.
    ExtensionValue:
      title: ExtensionValue
      type: string
      minLength: 1
      maxLength: 128
      description: Extension value.
    Extension_v2_1_0:
      title: Extension_v2_1_0
      type: object
      description: Data model for the complex type Extension.
      properties:
        key:
          $ref: '#/components/schemas/ExtensionKey_v2_1_0'
        value:
          $ref: '#/components/schemas/ExtensionValue'
      required:
        - key
        - value
    ExtensionList_v2_1_0:
      title: ExtensionList
      type: object
      description: Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.
      properties:
        extension:
          type: array
          items:
            $ref: '#/components/schemas/Extension_v2_1_0'
          minItems: 1
          maxItems: 16
          description: Number of Extension elements.
      required:
        - extension
    Money:
      title: Money
      type: object
      description: Data model for the complex type Money.
      properties:
        currency:
          $ref: '#/components/schemas/Currency'
        amount:
          $ref: '#/components/schemas/Amount'
      required:
        - currency
        - amount
    FxCharge:
      title: FxCharge
      type: object
      description: An FXP will be able to specify a charge which it proposes to levy on the currency conversion operation using a FxCharge object.
      properties:
        chargeType:
          type: string
          minLength: 1
          maxLength: 32
          description: A description of the charge which is being levied.
        sourceAmount:
          allOf:
            - $ref: '#/components/schemas/Money'
            - description: The amount of the charge which is being levied, expressed in the source currency.
        targetAmount:
          allOf:
            - $ref: '#/components/schemas/Money'
            - description: The amount of the charge which is being levied, expressed in the target currency.
      required:
        - chargeType
    DateTime:
      title: DateTime
      type: string
      pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
      description: The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are "2016-05-24T08:38:08.699-04:00", "2016-05-24T08:38:08.699Z" (where Z indicates Zulu time zone, same as UTC).
      example: '2016-05-24T08:38:08.699-04:00'
    Currency:
      title: Currency
      description: The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.
      type: string
      minLength: 3
      maxLength: 3
      enum:
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BRL
        - BSD
        - BTN
        - BWP
        - BYN
        - BZD
        - CAD
        - CDF
        - CHF
        - CLP
        - CNY
        - COP
        - CRC
        - CUC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - GBP
        - GEL
        - GGP
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - HKD
        - HNL
        - HRK
        - HTG
        - HUF
        - IDR
        - ILS
        - IMP
        - INR
        - IQD
        - IRR
        - ISK
        - JEP
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRO
        - MUR
        - MVR
        - MWK
        - MXN
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SLL
        - SOS
        - SPL
        - SRD
        - STD
        - SVC
        - SYP
        - SZL
        - THB
        - TJS
        - TMT
        - TND
        - TOP
        - TRY
        - TTD
        - TVD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - UYU
        - UZS
        - VEF
        - VND
        - VUV
        - WST
        - XAF
        - XCD
        - XDR
        - XOF
        - XPF
        - XTS
        - XXX
        - YER
        - ZAR
        - ZMW
        - ZWD
    Amount:
      title: Amount
      type: string
      pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
      description: The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.
      example: '123.45'
    FxMoney:
      title: FxMoney
      type: object
      description: Data model for the complex type FxMoney; This is based on the type Money but allows the amount to be optional to support FX quotations.
      properties:
        currency:
          $ref: '#/components/schemas/Currency'
        amount:
          $ref: '#/components/schemas/Amount'
      required:
        - currency
    AmountType:
      title: AmountType
      type: string
      enum:
        - SEND
        - RECEIVE
      description: |-
        Below are the allowed values for the enumeration AmountType.
        - SEND - Amount the Payer would like to send, that is, the amount that should be withdrawn from the Payer account including any fees.
        - RECEIVE - Amount the Payer would like the Payee to receive, that is, the amount that should be sent to the receiver exclusive of any fees.
      example: RECEIVE
    FspId:
      title: FspId
      type: string
      minLength: 1
      maxLength: 32
      description: FSP identifier.
    FxConversion:
      title: FxConversion
      type: object
      description: A DFSP will be able to request a currency conversion, and an FX provider will be able to describe its involvement in a proposed transfer, using a FxConversion object.
      properties:
        conversionId:
          allOf:
            - $ref: '#/components/schemas/CorrelationId'
            - description: An end-to-end identifier for the conversion request.
        determiningTransferId:
          allOf:
            - $ref: '#/components/schemas/CorrelationId'
            - description: The transaction ID of the transfer on whose success this currency conversion depends.
        initiatingFsp:
          allOf:
            - $ref: '#/components/schemas/FspId'
            - description: The id of the participant who is requesting a currency conversion.
        counterPartyFsp:
          allOf:
            - $ref: '#/components/schemas/FspId'
            - description: The ID of the FXP performing the conversion.
        amountType:
          allOf:
            - $ref: '#/components/schemas/AmountType'
            - description: This is the AmountType for the base transaction - If SEND - then any charges levied by the FXP as part of the transaction will be deducted by the FXP from the amount shown for the target party in the conversion. If RECEIVE - then any charges levied by the FXP as part of the transaction will be added by the FXP to the amount shown for the source party in the conversion.
        sourceAmount:
          allOf:
            - $ref: '#/components/schemas/FxMoney'
            - description: The amount to be converted, expressed in the source currency.
        targetAmount:
          allOf:
            - $ref: '#/components/schemas/FxMoney'
            - description: The converted amount, expressed in the target currency.
        expiration:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The end of the period for which the currency conversion is required to remain valid.
        charges:
          type: array
          description: One or more charges which the FXP intends to levy as part of the currency conversion, or which the payee DFSP intends to add to the amount transferred.
          items:
            $ref: '#/components/schemas/FxCharge'
          minItems: 0
          maxItems: 16
        extensionList:
          allOf:
            - $ref: '#/components/schemas/ExtensionList_v2_1_0'
            - description: The extension list for the currency conversion request.
      required:
        - conversionId
        - initiatingFsp
        - counterPartyFsp
        - amountType
        - sourceAmount
        - targetAmount
        - expiration

    CorrelationId:
      title: CorrelationId
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-7][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$|^[0-9A-HJKMNP-TV-Z]{26}$
      description: Identifier that correlates all messages of the same sequence. The supported identifiers formats are for lowercase [UUID](https://datatracker.ietf.org/doc/html/rfc9562) and uppercase [ULID](https://github.com/ulid/spec)
      example: b51ec534-ee48-4575-b6a9-ead2955b8069

    errorResponse:
      type: object
      properties:
        statusCode:
          type: string
          description: |
            Backend error code from FSP. Ideally, statusCode is FSPIOP conforming. SDK will use status code to retrieve an FSPIOP error with the same code.
            Otherwise, a suitable generic FSPIOP will be used with the errorResponse in the FSPIOP error message.
        message:
          type: string
          description: Error message text.

    FxQuotesPostBackendRequest:
        title: FxQuotesPostBackendRequest
        type: object
        description: The object sent in the POST /fxQuotes request.
        properties:
          conversionRequestId:
            allOf:
              - $ref: '#/components/schemas/CorrelationId'
              - description: An end-to-end identifier for the conversion quotation request.
          conversionTerms:
            allOf:
              - $ref: '#/components/schemas/FxConversion'
              - description: The terms of the currency conversion for which a quotation is sought.
        required:
          - conversionRequestId
          - conversionTerms
    
    FxQuotesPostBackendResponse:
      title: FxQuotesPostBackendResponse
      type: object
      description: The object sent as a response for the POST /fxQuotes request. The terms under which the FXP will undertake the currency conversion proposed by the requester.
      properties:
        homeTransactionId:
          description: Transaction ID for the FXP backend, used to reconcile transactions between the Switch and FXP backend systems.
          type: string
        conversionTerms:
          allOf:
            - $ref: '#/components/schemas/FxConversion'
            - description: The terms under which the FXP will undertake the currency conversion proposed by the requester.
      required:
        - conversionTerms